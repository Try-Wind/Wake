name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Wake ${{ github.ref }}
          body: |
            Wake - Hardware-First Coding Agent
            
            ## Features
            - Generate hardware drivers from specifications
            - Debug communication protocols (I2C, SPI, UART)
            - Analyze circuits and calculate component values
            - Multi-provider AI support
            
            ## Installation
            
            Download the appropriate binary for your platform and run:
            ```bash
            chmod +x wake-*
            sudo mv wake-* /usr/local/bin/wake
            wake auth
            ```
            
            Or use the install script:
            ```bash
            curl -fsSL https://raw.githubusercontent.com/Try-Wind/Wake/main/install.sh | bash
            ```
          draft: false
          prerelease: false

  build-release:
    name: Build Release - ${{ matrix.target }}
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: wake
            asset_name: wake-linux-amd64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            binary_name: wake
            asset_name: wake-linux-arm64
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: wake
            asset_name: wake-darwin-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_name: wake
            asset_name: wake-darwin-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: wake.exe
            asset_name: wake-windows-amd64.exe

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install cross-compilation tools
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./target/${{ matrix.target }}/release/${{ matrix.binary_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream