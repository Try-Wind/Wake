name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for release'
        required: true
        default: 'v0.1.3'

jobs:
  build:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary: wake
            name: wake-linux-x64
          - os: macos-latest
            target: x86_64-apple-darwin
            binary: wake
            name: wake-macos-x64
          - os: macos-latest
            target: aarch64-apple-darwin
            binary: wake
            name: wake-macos-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary: wake.exe
            name: wake-windows-x64.exe

    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      
      - name: Build
        run: |
          cd wake-cli
          cargo build --release --target ${{ matrix.target }}
      
      - name: Prepare Binary (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          mv ${{ matrix.binary }} ../../../${{ matrix.name }}
          chmod +x ../../../${{ matrix.name }}
      
      - name: Prepare Binary (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd target\${{ matrix.target }}\release
          move ${{ matrix.binary }} ..\..\..\${{ matrix.name }}
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            wake-linux-x64/wake-linux-x64
            wake-macos-x64/wake-macos-x64
            wake-macos-arm64/wake-macos-arm64
            wake-windows-x64.exe/wake-windows-x64.exe
          draft: false
          prerelease: false
          tag_name: ${{ github.event.inputs.tag_name || github.ref_name }}
          name: Wake ${{ github.event.inputs.tag_name || github.ref_name }}
          body: |
            ## Wake - Hardware-First Coding Agent
            
            ### Installation
            
            #### Quick Install (Linux/macOS)
            ```bash
            curl -fsSL https://raw.githubusercontent.com/Try-Wind/Wake/main/install.sh | bash
            ```
            
            #### Manual Download
            Download the appropriate binary for your platform from the assets below.
            
            #### From Source
            ```bash
            git clone https://github.com/Try-Wind/Wake.git
            cd Wake
            cargo install --path wake-cli
            ```
            
            ### What's New
            - Initial release of Wake
            - Hardware interaction capabilities
            - Multi-platform support
            
            ### Documentation
            - [User Guide](https://github.com/Try-Wind/Wake/blob/main/docs/USER_GUIDE.md)
            - [Hardware Examples](https://github.com/Try-Wind/Wake/blob/main/docs/HARDWARE_EXAMPLES.md)
            - [Contributing](https://github.com/Try-Wind/Wake/blob/main/CONTRIBUTING.md)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}